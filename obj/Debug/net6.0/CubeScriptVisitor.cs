//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/GAMER/source/repos/ProtoGram/CubeScript.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CubeScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ICubeScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] CubeScriptParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] CubeScriptParser.LineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignmentexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentexpr([NotNull] CubeScriptParser.AssignmentexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>importstatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportstatement([NotNull] CubeScriptParser.ImportstatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>forstatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForstatement([NotNull] CubeScriptParser.ForstatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functioncallstatment</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncallstatment([NotNull] CubeScriptParser.FunctioncallstatmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functioncallstatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncallstatement([NotNull] CubeScriptParser.FunctioncallstatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>foreachstatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachstatement([NotNull] CubeScriptParser.ForeachstatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>varibledeclaration</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVaribledeclaration([NotNull] CubeScriptParser.VaribledeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringarray</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringarray([NotNull] CubeScriptParser.StringarrayContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>returnstatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnstatement([NotNull] CubeScriptParser.ReturnstatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>breakstatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakstatement([NotNull] CubeScriptParser.BreakstatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>continuestatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinuestatement([NotNull] CubeScriptParser.ContinuestatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>housestatement</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHousestatement([NotNull] CubeScriptParser.HousestatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arraydefinition</c>
	/// labeled alternative in <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraydefinition([NotNull] CubeScriptParser.ArraydefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBlock([NotNull] CubeScriptParser.IfBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.elseifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseifBlock([NotNull] CubeScriptParser.ElseifBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileBlock([NotNull] CubeScriptParser.WhileBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] CubeScriptParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functioncallexprs</c>
	/// labeled alternative in <see cref="CubeScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncallexprs([NotNull] CubeScriptParser.FunctioncallexprsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] CubeScriptParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotexpr([NotNull] CubeScriptParser.NotexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ternaryexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryexpr([NotNull] CubeScriptParser.TernaryexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>addexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddexpr([NotNull] CubeScriptParser.AddexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>constantexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantexpr([NotNull] CubeScriptParser.ConstantexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functioncallexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncallexpr([NotNull] CubeScriptParser.FunctioncallexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolexpr([NotNull] CubeScriptParser.BoolexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesisexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesisexpr([NotNull] CubeScriptParser.ParenthesisexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>decrementexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrementexpr([NotNull] CubeScriptParser.DecrementexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>incrementexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementexpr([NotNull] CubeScriptParser.IncrementexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultexpr([NotNull] CubeScriptParser.MultexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dotexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotexpr([NotNull] CubeScriptParser.DotexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arrayassignment</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayassignment([NotNull] CubeScriptParser.ArrayassignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierexpression</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierexpression([NotNull] CubeScriptParser.IdentifierexpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dotfunctioncallexprs</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotfunctioncallexprs([NotNull] CubeScriptParser.DotfunctioncallexprsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arrayexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayexpr([NotNull] CubeScriptParser.ArrayexprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>varibleassignment</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVaribleassignment([NotNull] CubeScriptParser.VaribleassignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>cmpexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpexpr([NotNull] CubeScriptParser.CmpexprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] CubeScriptParser.MultOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] CubeScriptParser.AddOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.cmpOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpOp([NotNull] CubeScriptParser.CmpOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOp([NotNull] CubeScriptParser.BoolOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] CubeScriptParser.ConstantContext context);
}
