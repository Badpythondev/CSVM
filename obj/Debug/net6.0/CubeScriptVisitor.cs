//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\GAMER\source\repos\ProtoGram\CubeScript.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ProtoGram {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CubeScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ICubeScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierexpr([NotNull] CubeScriptParser.IdentifierexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>notexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotexpr([NotNull] CubeScriptParser.NotexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultexpr([NotNull] CubeScriptParser.MultexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddexpr([NotNull] CubeScriptParser.AddexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>cmpexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpexpr([NotNull] CubeScriptParser.CmpexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>constantexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantexpr([NotNull] CubeScriptParser.ConstantexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functioncallexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncallexpr([NotNull] CubeScriptParser.FunctioncallexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>boolexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolexpr([NotNull] CubeScriptParser.BoolexprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesisexpr</c>
	/// labeled alternative in <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesisexpr([NotNull] CubeScriptParser.ParenthesisexprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] CubeScriptParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] CubeScriptParser.LineContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] CubeScriptParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBlock([NotNull] CubeScriptParser.IfBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.elseifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseifBlock([NotNull] CubeScriptParser.ElseifBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileBlock([NotNull] CubeScriptParser.WhileBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] CubeScriptParser.AssignmentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] CubeScriptParser.FunctionCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] CubeScriptParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOp([NotNull] CubeScriptParser.MultOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOp([NotNull] CubeScriptParser.AddOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.cmpOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCmpOp([NotNull] CubeScriptParser.CmpOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOp([NotNull] CubeScriptParser.BoolOpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] CubeScriptParser.ConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="CubeScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] CubeScriptParser.BlockContext context);
}
} // namespace ProtoGram
